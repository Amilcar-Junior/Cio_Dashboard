{"ast":null,"code":"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { retrieveRequisicaos, deleteRequisicao } from \"../../../conection/requisicaos/actions\";\n\nclass Barra extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async getOptionsRequisicaos() {\n    const requisicaos = await axios.get(\"http://localhost:1337/requisicaos\");\n    const data = requisicaos.data;\n    const valores = data.reduce((acc, item) => {\n      const exists = acc.find(element => element.equipamento === item.equipamento.nome_equipamento);\n\n      if (exists) {\n        exists.custo += item.custo;\n        return acc;\n      }\n\n      acc.push({\n        custo: item.custo,\n        equipamento: item.equipamento.nome_equipamento\n      });\n      return acc;\n    }, []);\n    const custo = valores.map(a => a.custo);\n    const nome = valores.map(n => n.equipamento);\n    console.log(valores);\n    this.setState(prevState => ({ ...prevState,\n      series: custo,\n      options: { ...prevState.options,\n        labels: nome\n      }\n    }));\n  }\n\n  componentDidMount() {\n    this.getOptionsRequisicaos();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState != this.state) {\n      console.log(\"a\");\n    }\n  }\n\n  render() {\n    var options = {\n      series: [{\n        data: [44, 55, 41, 64, 22, 43, 21]\n      }, {\n        data: [53, 32, 33, 52, 13, 44, 32]\n      }],\n      chart: {\n        type: 'bar',\n        height: 430\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          dataLabels: {\n            position: 'top'\n          }\n        }\n      },\n      dataLabels: {\n        enabled: true,\n        offsetX: -6,\n        style: {\n          fontSize: '12px',\n          colors: ['#fff']\n        }\n      },\n      stroke: {\n        show: true,\n        width: 1,\n        colors: ['#fff']\n      },\n      tooltip: {\n        shared: true,\n        intersect: false\n      },\n      xaxis: {\n        categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007]\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n    chart.render();\n  }\n\n}\n\nexport default Barra;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/Cio_Dashboard/Frontend/src/components/pages/cio-hardware/Barra.jsx"],"names":["React","Component","Chart","axios","connect","retrieveRequisicaos","deleteRequisicao","Barra","constructor","props","state","getOptionsRequisicaos","requisicaos","get","data","valores","reduce","acc","item","exists","find","element","equipamento","nome_equipamento","custo","push","map","a","nome","n","console","log","setState","prevState","series","options","labels","componentDidMount","componentDidUpdate","prevProps","render","chart","type","height","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","width","tooltip","shared","intersect","xaxis","categories","ApexCharts","document","querySelector"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { retrieveRequisicaos, deleteRequisicao } from \"../../../conection/requisicaos/actions\";\r\n\r\nclass Barra extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \r\n  }\r\n    \r\n  }\r\n\r\n\r\n  async getOptionsRequisicaos() {\r\n    const requisicaos = await axios.get(\"http://localhost:1337/requisicaos\");\r\n\r\n    const data = requisicaos.data;\r\n\r\n    const valores = data.reduce((acc,item)=>{\r\n      \tconst exists = acc.find(element=>element.equipamento === item.equipamento.nome_equipamento);\r\n        if(exists){\r\n          exists.custo+=item.custo;\r\n          return acc;\r\n        }\r\n        acc.push({custo: item.custo, equipamento: item.equipamento.nome_equipamento})\r\n        return acc;\r\n    },[])\r\n\r\n    const custo = valores.map(a=>a.custo);\r\n    const nome = valores.map(n=>n.equipamento);\r\n    console.log(valores);\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      series: custo,\r\n      options: {...prevState.options,labels: nome}\r\n    }));\r\n\r\n\r\n  } \r\n\r\n  componentDidMount(){\r\n    this.getOptionsRequisicaos();\r\n  } \r\n\r\n  \r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if(prevState != this.state){\r\n      console.log(\"a\");\r\n    }\r\n\r\n  }\r\n  render() {\r\n    var options = {\r\n      series: [{\r\n      data: [44, 55, 41, 64, 22, 43, 21]\r\n    }, {\r\n      data: [53, 32, 33, 52, 13, 44, 32]\r\n    }],\r\n      chart: {\r\n      type: 'bar',\r\n      height: 430\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        dataLabels: {\r\n          position: 'top',\r\n        },\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: -6,\r\n      style: {\r\n        fontSize: '12px',\r\n        colors: ['#fff']\r\n      }\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: ['#fff']\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false\r\n    },\r\n    xaxis: {\r\n      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\r\n    },\r\n    };\r\n\r\n    var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n    chart.render();\r\n  }\r\n}\r\n\r\n\r\nexport default Barra;"]},"metadata":{},"sourceType":"module"}