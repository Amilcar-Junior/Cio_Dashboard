{"ast":null,"code":"import { CREATE_REQUISICAO, RETRIEVE_REQUISICAOS, UPDATE_REQUISICAO, DELETE_REQUISICAO } from \"./actionTypes\";\nimport { toast } from \"react-toastify\";\nimport RequisicaosService from \"./requisicaosService\";\nexport const createRequisicao = (date_requisicao, tipo_manutencao, date_conclusao, status, custo, equipamento) => async dispatch => {\n  try {\n    const res = await RequisicaosService.create({\n      date_requisicao,\n      tipo_manutencao,\n      date_conclusao,\n      status,\n      custo,\n      equipamento\n    });\n    dispatch({\n      type: CREATE_REQUISICAO,\n      payload: res.data\n    });\n    toast.success('Requisicao adicionado com sucesso!');\n    return Promise.resolve(res.data);\n  } catch (err) {\n    toast.error('Requisicao não adicionado!');\n    return Promise.reject(err);\n  }\n};\nexport const retrieveRequisicaos = () => async dispatch => {\n  try {\n    const res = await RequisicaosService.getAll();\n    dispatch({\n      type: RETRIEVE_REQUISICAOS,\n      payload: res.data\n    });\n  } catch (err) {\n    toast.error('Requisicao não encontrado!');\n    console.log(err);\n  }\n};\nexport const updateRequisicao = (id, data) => async dispatch => {\n  try {\n    const res = await RequisicaosService.update(id, data);\n    dispatch({\n      type: UPDATE_REQUISICAO,\n      payload: res.data\n    });\n    toast.success('Requisicao foi alterado com sucesso!');\n    return Promise.resolve(res.data);\n  } catch (err) {\n    toast.error('Requisicao não foi alterado!');\n    return Promise.reject(err);\n  }\n};\nexport const deleteRequisicao = id => async dispatch => {\n  try {\n    await RequisicaosService.delete(id);\n    dispatch({\n      type: DELETE_REQUISICAO,\n      payload: {\n        id\n      }\n    });\n    toast.success('Requisicao Deletado com sucesso!');\n  } catch (err) {\n    toast.error('Requisicao não foi Deletado!');\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/Cio_Dashboard/Frontend/src/conection/requisicaos/actions.js"],"names":["CREATE_REQUISICAO","RETRIEVE_REQUISICAOS","UPDATE_REQUISICAO","DELETE_REQUISICAO","toast","RequisicaosService","createRequisicao","date_requisicao","tipo_manutencao","date_conclusao","status","custo","equipamento","dispatch","res","create","type","payload","data","success","Promise","resolve","err","error","reject","retrieveRequisicaos","getAll","console","log","updateRequisicao","id","update","deleteRequisicao","delete"],"mappings":"AAAA,SAEIA,iBAFJ,EAIIC,oBAJJ,EAMIC,iBANJ,EAQIC,iBARJ,QAUO,eAVP;AAYA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,MAAMC,gBAAgB,GAEzB,CAACC,eAAD,EAAiBC,eAAjB,EAAiCC,cAAjC,EAAgDC,MAAhD,EAAuDC,KAAvD,EAA6DC,WAA7D,KAA8E,MAAOC,QAAP,IAAoB;AAE9F,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAACU,MAAnB,CAA0B;AAExCR,MAAAA,eAFwC;AAExBC,MAAAA,eAFwB;AAERC,MAAAA,cAFQ;AAEOC,MAAAA,MAFP;AAEcC,MAAAA,KAFd;AAEoBC,MAAAA;AAFpB,KAA1B,CAAlB;AAMAC,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEhB,iBAFD;AAILiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAJR,KAAD,CAAR;AASAd,IAAAA,KAAK,CAACe,OAAN,CAAc,oCAAd;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBP,GAAG,CAACI,IAApB,CAAP;AAEH,GApBD,CAoBE,OAAOI,GAAP,EAAY;AAEVlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,4BAAZ;AACA,WAAOH,OAAO,CAACI,MAAR,CAAeF,GAAf,CAAP;AAEH;AAEJ,CA/BE;AAiCP,OAAO,MAAMG,mBAAmB,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AAEzD,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAACqB,MAAnB,EAAlB;AAEAb,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEf,oBAFD;AAILgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAJR,KAAD,CAAR;AAQH,GAZD,CAYE,OAAOI,GAAP,EAAY;AAEVlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,4BAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEH;AAEJ,CArBM;AAuBP,OAAO,MAAMO,gBAAgB,GAAG,CAACC,EAAD,EAAKZ,IAAL,KAAc,MAAOL,QAAP,IAAoB;AAE9D,MAAI;AAEA,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAAC0B,MAAnB,CAA0BD,EAA1B,EAA8BZ,IAA9B,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEd,iBAFD;AAILe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAJR,KAAD,CAAR;AAQAd,IAAAA,KAAK,CAACe,OAAN,CAAc,sCAAd;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBP,GAAG,CAACI,IAApB,CAAP;AAEH,GAfD,CAeE,OAAOI,GAAP,EAAY;AACVlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,8BAAZ;AACA,WAAOH,OAAO,CAACI,MAAR,CAAeF,GAAf,CAAP;AAEH;AAEJ,CAvBM;AAyBP,OAAO,MAAMU,gBAAgB,GAAIF,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AAExD,MAAI;AAEA,UAAMR,kBAAkB,CAAC4B,MAAnB,CAA0BH,EAA1B,CAAN;AAEAjB,IAAAA,QAAQ,CAAC;AAELG,MAAAA,IAAI,EAAEb,iBAFD;AAILc,MAAAA,OAAO,EAAE;AAAEa,QAAAA;AAAF;AAJJ,KAAD,CAAR;AAQA1B,IAAAA,KAAK,CAACe,OAAN,CAAc,kCAAd;AAEH,GAdD,CAcE,OAAOG,GAAP,EAAY;AAEVlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,8BAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEH;AAEJ,CAvBM","sourcesContent":["import {\r\n\r\n    CREATE_REQUISICAO,\r\n\r\n    RETRIEVE_REQUISICAOS,\r\n\r\n    UPDATE_REQUISICAO,\r\n\r\n    DELETE_REQUISICAO,\r\n\r\n} from \"./actionTypes\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport RequisicaosService from \"./requisicaosService\";\r\n\r\nexport const createRequisicao =\r\n\r\n    (date_requisicao,tipo_manutencao,date_conclusao,status,custo,equipamento,) => async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const res = await RequisicaosService.create({\r\n\r\n                date_requisicao,tipo_manutencao,date_conclusao,status,custo,equipamento,\r\n            });\r\n\r\n\r\n            dispatch({\r\n\r\n                type: CREATE_REQUISICAO,\r\n\r\n                payload: res.data,\r\n                \r\n\r\n            });\r\n\r\n            toast.success('Requisicao adicionado com sucesso!');\r\n            return Promise.resolve(res.data);\r\n\r\n        } catch (err) {\r\n\r\n            toast.error('Requisicao não adicionado!')\r\n            return Promise.reject(err);\r\n\r\n        }\r\n\r\n    };\r\n\r\nexport const retrieveRequisicaos = () => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await RequisicaosService.getAll();\r\n\r\n        dispatch({\r\n\r\n            type: RETRIEVE_REQUISICAOS,\r\n\r\n            payload: res.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        toast.error('Requisicao não encontrado!');\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const updateRequisicao = (id, data) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        const res = await RequisicaosService.update(id, data);\r\n\r\n        dispatch({\r\n\r\n            type: UPDATE_REQUISICAO,\r\n\r\n            payload: res.data,\r\n\r\n        });\r\n\r\n        toast.success('Requisicao foi alterado com sucesso!')\r\n        return Promise.resolve(res.data);\r\n\r\n    } catch (err) {\r\n        toast.error('Requisicao não foi alterado!')\r\n        return Promise.reject(err);\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const deleteRequisicao = (id) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        await RequisicaosService.delete(id);\r\n\r\n        dispatch({\r\n\r\n            type: DELETE_REQUISICAO,\r\n\r\n            payload: { id },\r\n\r\n        });\r\n\r\n        toast.success('Requisicao Deletado com sucesso!')\r\n\r\n    } catch (err) {\r\n\r\n        toast.error('Requisicao não foi Deletado!')\r\n        console.log(err);\r\n\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}