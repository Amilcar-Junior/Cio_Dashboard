{"ast":null,"code":"import { CREATE_SERVICO, RETRIEVE_SERVICOS, UPDATE_SERVICO, DELETE_SERVICO } from \"./actionTypes\";\nconst initialState = [];\n\nfunction servicoReducer(servicos = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_SERVICO:\n      return [...servicos, payload];\n\n    case RETRIEVE_SERVICOS:\n      return payload;\n\n    case UPDATE_SERVICO:\n      return servicos.map(servico => {\n        if (servico.id === payload.id) {\n          return { ...servico,\n            ...payload\n          };\n        } else {\n          return servico;\n        }\n      });\n\n    case DELETE_SERVICO:\n      return servicos.filter(({\n        id\n      }) => id !== payload.id);\n\n    default:\n      return servicos;\n  }\n}\n\nexport default servicoReducer;","map":{"version":3,"sources":["C:/Users/amilc/Documents/GitHub/Cio_Dashboard/Frontend/src/conection/servicos/reducers.js"],"names":["CREATE_SERVICO","RETRIEVE_SERVICOS","UPDATE_SERVICO","DELETE_SERVICO","initialState","servicoReducer","servicos","action","type","payload","map","servico","id","filter"],"mappings":"AAAA,SAEIA,cAFJ,EAIIC,iBAJJ,EAMIC,cANJ,EAQIC,cARJ,QAUU,eAVV;AAYG,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,cAAT,CAAwBC,QAAQ,GAAGF,YAAnC,EAAiDG,MAAjD,EAAyD;AAExD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AAEE,SAAKR,cAAL;AAEE,aAAO,CAAC,GAAGM,QAAJ,EAAcG,OAAd,CAAP;;AAEF,SAAKR,iBAAL;AAEE,aAAOQ,OAAP;;AAEF,SAAKP,cAAL;AAEE,aAAOI,QAAQ,CAACI,GAAT,CAAcC,OAAD,IAAa;AAE/B,YAAIA,OAAO,CAACC,EAAR,KAAeH,OAAO,CAACG,EAA3B,EAA+B;AAE7B,iBAAO,EAEL,GAAGD,OAFE;AAIL,eAAGF;AAJE,WAAP;AAQD,SAVD,MAUO;AAEL,iBAAOE,OAAP;AAED;AAEF,OAlBM,CAAP;;AAoBF,SAAKR,cAAL;AAEE,aAAOG,QAAQ,CAACO,MAAT,CAAgB,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKH,OAAO,CAACG,EAA3C,CAAP;;AAEF;AAEE,aAAON,QAAP;AAtCJ;AA0CA;;AAED,eAAeD,cAAf","sourcesContent":["import {\r\n\r\n    CREATE_SERVICO,\r\n   \r\n    RETRIEVE_SERVICOS,\r\n   \r\n    UPDATE_SERVICO,\r\n   \r\n    DELETE_SERVICO,\r\n   \r\n   } from \"./actionTypes\";\r\n   \r\n   const initialState = [];\r\n   \r\n   function servicoReducer(servicos = initialState, action) {\r\n   \r\n    const { type, payload } = action;\r\n   \r\n    switch (type) {\r\n   \r\n      case CREATE_SERVICO:\r\n   \r\n        return [...servicos, payload];\r\n   \r\n      case RETRIEVE_SERVICOS:\r\n   \r\n        return payload;\r\n   \r\n      case UPDATE_SERVICO:\r\n   \r\n        return servicos.map((servico) => {\r\n   \r\n          if (servico.id === payload.id) {\r\n   \r\n            return {\r\n   \r\n              ...servico,\r\n   \r\n              ...payload,\r\n   \r\n            };\r\n   \r\n          } else {\r\n   \r\n            return servico;\r\n   \r\n          }\r\n   \r\n        });\r\n   \r\n      case DELETE_SERVICO:\r\n   \r\n        return servicos.filter(({ id }) => id !== payload.id);\r\n   \r\n      default:\r\n   \r\n        return servicos;\r\n   \r\n    }\r\n   \r\n   }\r\n   \r\n   export default servicoReducer;"]},"metadata":{},"sourceType":"module"}